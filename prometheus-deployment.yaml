apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
            - --enable-feature=otlp-write-receiver
            - --storage.tsdb.retention.time=1y
          image: prom/prometheus:v2.54.1
          name: prometheus
          ports:
            - containerPort: 9090
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/prometheus/prometheus.yml
              name: prometheus-cm0
              subPath: prometheus.yml
            - mountPath: /prometheus
              name: prometheus
      restartPolicy: Always
      terminationGracePeriodSeconds: 300
      imagePullSecrets:
      - name: docker-registry-secret-k1
      volumes:
        - configMap:
            items:
              - key: prometheus.yml
                path: prometheus.yml
            name: prometheus-cm0
          name: prometheus-cm0
        - name: prometheus
          persistentVolumeClaim:
            claimName: prometheus
---
apiVersion: v1
data:
  prometheus.yml: |-
    global:
      scrape_interval: 1m

    scrape_configs:
      - job_name: 'prometheus'
        scrape_interval: 1m
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'otel-collector'
        scrape_interval: 30s
        static_configs:
          - targets: ['otel-collector:8888']
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    app: prometheus
  name: prometheus-cm0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    app: prometheus
  name: prometheus
spec:
  ports:
    - name: "9090"
      port: 9090
      targetPort: 9090
  selector:
    app: prometheus